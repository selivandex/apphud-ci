version: 2
jobs:
  build:
    working_directory: ~/source
    docker:
      - image: circleci/ruby:2.6.0-node
        environment:
          RAILS_ENV: test
          RACK_ENV: test

    steps:
      - checkout

      - restore_cache:
          keys:
          - v2-dependencies-{{ checksum "Gemfile.lock" }}
      - run:
          name: install dependencies
          command: |
            bundle check --path=vendor/bundle || bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          key: v2-dependencies-{{ checksum "Gemfile.lock" }}
          paths:
          - vendor/bundle

      - persist_to_workspace:
          root: ~/source
          paths:
            - .

  tests:
    working_directory: ~/source
    docker:
      - image: circleci/ruby:2.6.0-node
        environment:
          DATABASE_URL: postgres://test_u@localhost:5432/test_db
          BUNDLE_PATH: /home/circleci/source/vendor/bundle/ruby/2.6.0
          RAILS_ENV: test
          RACK_ENV: test
      - image: circleci/postgres:10.3
        environment:
          POSTGRES_USER: test_u
          POSTGRES_DB: test_db
      - image: redis:3.2.7

    steps:
      - attach_workspace:
          at: ~/source

      - run:
          name: Set up DB schema
          command: |
            bundle exec rake db:create db:migrate --trace

      - run:
          name: run checks code style
          command: bundle exec rubocop

      - type: shell
        command: |
                  bundle exec rspec --profile 10 \
                            --format RspecJunitFormatter \
                            --out /tmp/test-results/rspec.xml \
                            --format progress \
                            $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)

      - store_test_results:
          path: /tmp/test-results

  deploy-stg:
    working_directory: ~/source
    docker:
      - image: circleci/ruby:2.6.0-node
        environment:
          BUNDLE_PATH: /home/circleci/source/vendor/bundle/ruby/2.6.0

    steps:
      - attach_workspace:
          at: ~/source
      - add_ssh_keys:
          fingerprints:
            - "c1:eb:68:26:b6:9c:fb:3a:4a:a8:cb:97:2b:0e:71:7b"

      - run:
          name: deploy to staging
          command: |
            bundle exec cap staging deploy

  deploy-prod:
    working_directory: ~/source
    docker:
      - image: circleci/ruby:2.6.0-node
        environment:
          BUNDLE_PATH: /home/circleci/source/vendor/bundle/ruby/2.6.0

    steps:
      - attach_workspace:
          at: ~/source
      - add_ssh_keys:
          fingerprints:
            - "c1:eb:68:26:b6:9c:fb:3a:4a:a8:cb:97:2b:0e:71:7b"

      - run:
          name: deploy to prod
          command: |
            bundle exec cap production deploy


workflows:
  version: 2
  build-tests-and-deploy:
    jobs:
      - build
      - tests:
          requires:
            - build
      - deploy-stg:
          requires:
            - build
            - tests
          filters:
            branches:
              only: staging
      - deploy-prod:
          requires:
            - build
            - tests
          filters:
            branches:
              only: master
